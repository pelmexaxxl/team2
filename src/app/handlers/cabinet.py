from aiogram import Router
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select
from app.models.user import User, Role

router = Router(name="cabinet_router")

@router.message(lambda m: m.text == "/cabinet")
async def cabinet(msg: Message, session: AsyncSession):
    user: User | None = await session.scalar(select(User).where(User.tg_id == msg.from_user.id))
    if not user:
        await msg.answer("–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ /start.")
        return

    kb = []
    if user.role in (Role.HR, Role.ADMIN):
        kb.append([InlineKeyboardButton(text="üìä –ò—Ç–æ–≥–∏ –æ–ø—Ä–æ—Å–æ–≤", callback_data="cab_results")])
        kb.append([InlineKeyboardButton(text="üí¨ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è", callback_data="cab_welcome")])
    if user.role == Role.ADMIN:
        kb.append([InlineKeyboardButton(text="‚öôÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="cab_global")])

    kb.append([InlineKeyboardButton(text="üó≥Ô∏è –ú–æ–∏ –æ—Ç–≤–µ—Ç—ã", callback_data="cab_my")])
    await msg.answer(f"–í–∞—à —Ä–∞–Ω–≥: <b>{user.role.value}</b>", reply_markup=InlineKeyboardMarkup(inline_keyboard=kb), parse_mode="HTML")
